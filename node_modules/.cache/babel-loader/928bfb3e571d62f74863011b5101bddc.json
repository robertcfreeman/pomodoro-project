{"ast":null,"code":"var _jsxFileName = \"/Users/robertfreeman/Desktop/Qualified/Project_Pomodoro_timer_Qualified_1/src/pomodoro/SessionTitle.js\";\nimport React from 'react';\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function SessionTitle({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimerRunning\n}) {\n  if (!session) return null;\n  /*renders the formatted time remaining in the current session\n   whether \"Focusing\" or \"On Break\"\n   @return */\n\n  function getSessionTime(session) {\n    let sesssionTime = null;\n\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      sessionTime = minutesToDuration(focusDuration);\n    } else if ((session === null || session === void 0 ? void 0 : session.label) === \"On Break\") {\n      sessionTime = minutesToDuration(breakDuration);\n    }\n\n    ;\n    return sessionTime;\n  } //renders \"Paused\" when timer is paused\n\n\n  let pausedContent = null;\n\n  if (!isTimerRunning) {\n    pausedContent = /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Paused\");\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", getSessionTime(session), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), pausedContent));\n}","map":{"version":3,"sources":["/Users/robertfreeman/Desktop/Qualified/Project_Pomodoro_timer_Qualified_1/src/pomodoro/SessionTitle.js"],"names":["React","minutesToDuration","secondsToDuration","SessionTitle","session","focusDuration","breakDuration","isTimerRunning","getSessionTime","sesssionTime","label","sessionTime","pausedContent","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,OADmC;AAEnCC,EAAAA,aAFmC;AAGnCC,EAAAA,aAHmC;AAInCC,EAAAA;AAJmC,CAAtB,EAKZ;AAED,MAAI,CAACH,OAAL,EAAc,OAAO,IAAP;AAEd;AACF;AACA;;AACE,WAASI,cAAT,CAAyBJ,OAAzB,EAAkC;AAChC,QAAIK,YAAY,GAAG,IAAnB;;AACA,QAAI,CAAAL,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,KAAT,MAAmB,UAAvB,EAAmC;AACjCC,MAAAA,WAAW,GAAGV,iBAAiB,CAACI,aAAD,CAA/B;AACD,KAFD,MAEO,IAAI,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,KAAT,MAAkB,UAAtB,EAAkC;AACvCC,MAAAA,WAAW,GAAGV,iBAAiB,CAACK,aAAD,CAA/B;AACD;;AAAA;AAED,WAAOK,WAAP;AACD,GAhBA,CAmBD;;;AACA,MAAIC,aAAa,GAAG,IAApB;;AACA,MAAI,CAACL,cAAL,EAAqB;AACnBK,IAAAA,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACD;;AAAA;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OADH,aACGA,OADH,uBACGA,OAAO,CAAEM,KADZ,WACwBF,cAAc,CAACJ,OAAD,CADtC,aAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAES,aAAV,CADpB,eANF,EASGD,aATH,CADF,CADF;AAeD","sourcesContent":["import React from 'react';\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\"\n\nexport default function SessionTitle({\n  session, \n  focusDuration, \n  breakDuration, \n  isTimerRunning,\n}) {\n\n  if (!session) return null;\n\n  /*renders the formatted time remaining in the current session\n   whether \"Focusing\" or \"On Break\"\n   @return */\n  function getSessionTime (session) {\n    let sesssionTime = null;\n    if (session?.label === \"Focusing\") {\n      sessionTime = minutesToDuration(focusDuration);\n    } else if (session?.label ===\"On Break\") {\n      sessionTime = minutesToDuration(breakDuration);\n    };\n\n    return sessionTime;\n  }\n  \n\n  //renders \"Paused\" when timer is paused\n  let pausedContent = null;\n  if (!isTimerRunning) {\n    pausedContent = <h3>Paused</h3>;\n  };\n\n  \n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n        <h2 data-testid=\"session-title\">\n          {session?.label} for {getSessionTime(session)} minutes\n        </h2>\n        {/* TODO: Update message below correctly format the time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          {secondsToDuration(session?.timeRemaining)} remaining\n        </p>\n        {pausedContent}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}