{"ast":null,"code":"var _jsxFileName = \"/Users/robertfreeman/Desktop/Qualified/Project_Pomodoro_timer_Qualified_1/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport useInterval from \"./utils/useInterval\";\nimport FocusDuration from \"./pomodoro/FocusDuration\";\nimport BreakDuration from \"./pomodoro/BreakDuration\";\nimport PlayPauseBtn from \"./pomodoro/PlayPauseBtn\";\nimport SessionTitle from \"./pomodoro/SessionTitle\";\nimport SessionProgressBar from \"./pomodoro/SessionProgressBar\";\nimport StopBtn from \"./pomodoro/StopBtn\";\n\nfunction App() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null);\n  const btnsInitialState = {\n    stopBtn: true,\n    focusBtns: true,\n    breakBtns: true\n  };\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [disable, setDisable] = useState(btnsInitialState);\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Pomodoro Timer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/robertfreeman/Desktop/Qualified/Project_Pomodoro_timer_Qualified_1/src/App.js"],"names":["React","useState","useInterval","FocusDuration","BreakDuration","PlayPauseBtn","SessionTitle","SessionProgressBar","StopBtn","App","isTimerRunning","setIsTimerRunning","session","setSession","btnsInitialState","stopBtn","focusBtns","breakBtns","focusDuration","setFocusDuration","breakDuration","setBreakDuration","disable","setDisable","timeRemaining","Audio","play","nextSession","nextTick","playPause","prevState","nextState","prevStateSession","label"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAKA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD,CAFa,CAGb;;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMa,gBAAgB,GAAG;AACvBC,IAAAA,OAAO,EAAE,IADc;AAEvBC,IAAAA,SAAS,EAAE,IAFY;AAGvBC,IAAAA,SAAS,EAAE;AAHY,GAAzB;AAMA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAACa,gBAAD,CAAtC;AAGA;AACF;AACA;AACA;AACA;;AACEZ,EAAAA,WAAW,CAAC,MAAM;AACd,QAAIU,OAAO,CAACY,aAAR,KAA0B,CAA9B,EAAiC;AAC/B,UAAIC,KAAJ,CAAU,8CAAV,EAA0DC,IAA1D;AACA,aAAOb,UAAU,CAACc,WAAW,CAACT,aAAD,EAAgBE,aAAhB,CAAZ,CAAjB;AACD;;AACD,WAAOP,UAAU,CAACe,QAAD,CAAjB;AACD,GANQ,EAOTlB,cAAc,GAAG,IAAH,GAAU,IAPf,CAAX;AAUA;AACF;AACA;;AACE,WAASmB,SAAT,GAAqB;AACnBlB,IAAAA,iBAAiB,CAAEmB,SAAD,IAAe;AAC/B,YAAMC,SAAS,GAAG,CAACD,SAAnB;;AACA,UAAIC,SAAJ,EAAe;AACblB,QAAAA,UAAU,CAAEmB,gBAAD,IAAsB;AAC/B;AACA;AACA,cAAIA,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,mBAAO;AACLC,cAAAA,KAAK,EAAE,UADF;AAELT,cAAAA,aAAa,EAAEN,aAAa,GAAG;AAF1B,aAAP;AAID;;AACD,iBAAOc,gBAAP;AACD,SAVS,CAAV;AAWD;;AACD,aAAOD,SAAP;AACD,KAhBgB,CAAjB;AAiBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD;;AAAA;AAED,eAAetB,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./App.css\";\nimport useInterval from \"./utils/useInterval\";\nimport FocusDuration from \"./pomodoro/FocusDuration\";\nimport BreakDuration from \"./pomodoro/BreakDuration\";\nimport PlayPauseBtn from \"./pomodoro/PlayPauseBtn\";\nimport SessionTitle from \"./pomodoro/SessionTitle\";\nimport SessionProgressBar from \"./pomodoro/SessionProgressBar\";\nimport StopBtn from \"./pomodoro/StopBtn\";\n\n\n\n\nfunction App() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  const btnsInitialState = {\n    stopBtn: true,\n    focusBtns: true,\n    breakBtns: true,\n  };\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [disable, setDisable] = useState(btnsInitialState);\n\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}