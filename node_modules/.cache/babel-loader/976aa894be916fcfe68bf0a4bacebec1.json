{"ast":null,"code":"var _jsxFileName = \"/Users/robertfreeman/Desktop/Qualified/Project_Pomodoro_timer_Qualified_1/src/pomodoro/SessionProgressBar.js\";\nimport React from 'react';\nexport default function SessionProgressBar({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  if (!session) return null; //returns the current session's duration in seconds\n\n  function getSessionTime(session) {\n    let sessionTime = null;\n\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      sessionTime = focusDuration;\n    } else if ((session === null || session === void 0 ? void 0 : session.label) === \"On Break\") {\n      sessionTime = breakDuration;\n    }\n\n    ;\n    return sessionTime * 60;\n  }\n\n  ; //returns the percentage of \n\n  const getTimeRemainingPercentage = session => {\n    const percentage = (getSessionTime(session) - session.timeRemaining) / getSessionTime(session) * 100;\n    return `${percentage}%`;\n  };\n\n  const getTimeRemaining = session => {\n    const percentage = (getSessionTime(session) - session.timeRemaining) / getSessionTime(session) * 100;\n    return `${percentage}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": getTimeRemaining(session),\n    style: {\n      width: getTimeRemainingPercentage(session)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/robertfreeman/Desktop/Qualified/Project_Pomodoro_timer_Qualified_1/src/pomodoro/SessionProgressBar.js"],"names":["React","SessionProgressBar","session","focusDuration","breakDuration","getSessionTime","sessionTime","label","getTimeRemainingPercentage","percentage","timeRemaining","getTimeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAA5B,EAAqE;AAElF,MAAI,CAACF,OAAL,EAAc,OAAO,IAAP,CAFoE,CAIlF;;AACA,WAASG,cAAT,CAAyBH,OAAzB,EAAkC;AAChC,QAAII,WAAW,GAAG,IAAlB;;AACA,QAAI,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,KAAT,MAAmB,UAAvB,EAAmC;AACjCD,MAAAA,WAAW,GAAGH,aAAd;AACD,KAFD,MAEO,IAAI,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,KAAT,MAAkB,UAAtB,EAAkC;AACvCD,MAAAA,WAAW,GAAGF,aAAd;AACD;;AAAA;AAED,WAAOE,WAAW,GAAG,EAArB;AACD;;AAAA,GAdiF,CAgBlF;;AACA,QAAME,0BAA0B,GAAIN,OAAD,IAAa;AAC9C,UAAMO,UAAU,GAAG,CAACJ,cAAc,CAACH,OAAD,CAAd,GAA0BA,OAAO,CAACQ,aAAnC,IAAoDL,cAAc,CAACH,OAAD,CAAlE,GAA8E,GAAjG;AACA,WAAQ,GAAEO,UAAW,GAArB;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAIT,OAAD,IAAa;AACpC,UAAMO,UAAU,GAAG,CAACJ,cAAc,CAACH,OAAD,CAAd,GAA0BA,OAAO,CAACQ,aAAnC,IAAoDL,cAAc,CAACH,OAAD,CAAlE,GAA8E,GAAjG;AACA,WAAQ,GAAEO,UAAW,EAArB;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeD,gBAAgB,CAACT,OAAD,CALjC;AAME,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAEL,0BAA0B,CAACN,OAAD;AAAnC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAgBD","sourcesContent":["import React from 'react';\n\nexport default function SessionProgressBar({session, focusDuration, breakDuration}) {\n  \n  if (!session) return null;\n\n  //returns the current session's duration in seconds\n  function getSessionTime (session) {\n    let sessionTime = null;\n    if (session?.label === \"Focusing\") {\n      sessionTime = focusDuration;\n    } else if (session?.label ===\"On Break\") {\n      sessionTime = breakDuration;\n    };\n\n    return sessionTime * 60;\n  };\n\n  //returns the percentage of \n  const getTimeRemainingPercentage = (session ) =>{\n    const percentage = (getSessionTime(session) - session.timeRemaining) / getSessionTime(session) * 100;\n    return `${percentage}%`;\n  } \n\n  const getTimeRemaining = (session ) =>{\n    const percentage = (getSessionTime(session) - session.timeRemaining) / getSessionTime(session) * 100;\n    return `${percentage}`;\n  } \n  \n  \n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow={getTimeRemaining(session)} \n            style={{ width: getTimeRemainingPercentage(session) }} \n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}